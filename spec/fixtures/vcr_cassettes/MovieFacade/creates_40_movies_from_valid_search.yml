---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=DONT SHOW MY API KEY&page=1&query=man
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 28 May 2022 17:36:48 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Server:
      - BunnyCDN-DEN1-919
      Cdn-Pullzone:
      - '775334'
      Cdn-Uid:
      - 29af4e0e-bcbd-4fcb-8635-74ddc38a1ebf
      Cdn-Requestcountrycode:
      - US
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Cdn-Proxyver:
      - '1.02'
      Cdn-Requestpullsuccess:
      - 'True'
      Cdn-Requestpullcode:
      - '200'
      Cdn-Cachedat:
      - 05/28/2022 17:36:48
      Cdn-Edgestorageid:
      - '919'
      Cdn-Status:
      - '200'
      Cdn-Requestid:
      - 8474190af7575c45ecb693f9c14a0f98
      Cdn-Cache:
      - EXPIRED
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 28 May 2022 17:36:47 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=DONT SHOW MY API KEY&page=2&query=man
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 28 May 2022 17:36:48 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 23d87d8c2ce38e34462e6c134d187eea.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - gD2Hwj37sZePN6dsN4YwiOvUAQc4ktj6EL2udiDEEtBEmznINVidCw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 28 May 2022 17:36:48 GMT
recorded_with: VCR 6.1.0
